<?php
namespace ierusalim\ClickHouse;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-07-15 at 18:53:17.
 */
class ClickHouseFunctionsTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var ClickHouseFunctions
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $localenv = "localenv.php";
        if (is_file($localenv)) {
            include $localenv;
        } else {
            $clickhouse_url = null;
        }
        $this->object = new ClickHouseFunctions($clickhouse_url);
    }

    /**
     * @covers ierusalim\ClickHouse\ClickHouseFunctions::getCurrentDatabase
     */
    public function testGetCurrentDatabase()
    {
        $ch = $this->object;

        $ch->setSession();
        $session_id_1 = $ch->setSession();
        $session_id_2 = $ch->getSession();

        $db_1 = 'default';
        $db_2 = 'system';
        
        $ans = $ch->setCurrentDatabase($db_1, $session_id_1);
        $this->assertTrue($ans);
        $ans = $ch->setCurrentDatabase($db_2, $session_id_2);
        $this->assertTrue($ans);
        
        $ch->setSession($session_id_1);
        $db_name = $ch->getCurrentDatabase();
        $this->assertEquals($db_name, $db_1);

        $ch->setSession($session_id_2);
        $db_name = $ch->getCurrentDatabase();
        $this->assertEquals($db_name, $db_2);

        $db_name = $ch->getCurrentDatabase($session_id_1);
        $this->assertEquals($db_name, $db_1);
        $db_name = $ch->getCurrentDatabase($session_id_2);
        $this->assertEquals($db_name, $db_2);
    }

    /**
     * @covers ierusalim\ClickHouse\ClickHouseFunctions::setCurrentDatabase
     */
    public function testSetCurrentDatabase()
    {
        $ch = $this->object;

        $ch->setSession();
        $session_id_1 = $ch->setSession();
        $session_id_2 = $ch->getSession();

        $db_1 = 'default';
        $db_2 = 'system';
        
        $ans = $ch->setCurrentDatabase($db_1, $session_id_1);
        $this->assertTrue($ans);
        $ans = $ch->setCurrentDatabase($db_2, $session_id_2);
        $this->assertTrue($ans);

        $db_name = $ch->getCurrentDatabase($session_id_1);
        $this->assertEquals($db_name, $db_1);
        $db_name = $ch->getCurrentDatabase($session_id_2);
        $this->assertEquals($db_name, $db_2);
    }


    /**
     * @covers ierusalim\ClickHouse\ClickHouseFunctions::getDatabasesList
     */
    public function testGetDatabasesList()
    {
        $ch = $this->object;
        $db_arr = $ch->queryColumn("SHOW DATABASES");
        $db_2_arr =$ch->getDatabasesList();
        $this->assertEquals($db_arr, $db_2_arr);
        $this->assertTrue(\array_search('system', $db_arr) !== false);
    }

    /**
     * @covers ierusalim\ClickHouse\ClickHouseFunctions::getTablesList
    public function testGetTablesList()
    {
        $ch = $this->object;
        $sys_tbl_arr = $ch->getTablesList('system');
        $this->assertTrue(\count($sys_tbl_arr)>10);
        $this->assertTrue(\array_search('databases', $sys_tbl_arr) !== false);

        $data_tbl_arr = $ch->getTablesList('system', 'd%');
        $this->assertTrue(count($data_tbl_arr)>0);
        $this->assertTrue(array_search('databases', $data_tbl_arr)!==false);
    }
    */

    /**
     * @covers ierusalim\ClickHouse\ClickHouseFunctions::getProcessList
     */
    public function testGetProcessList()
    {
        $ch = $this->object;
        $proc_arr = $ch->getProcessList();
        $this->assertTrue(\is_array($proc_arr));
    }


    /**
     * @covers ierusalim\ClickHouse\ClickHouseFunctions::getTableFields
     */
    public function testGetTableFields()
    {
        $ch = $this->object;
        $desc_tbl_arr = $ch->getTableFields('system.databases');
        $this->assertArrayHasKey('name', $desc_tbl_arr);
        $this->assertArrayHasKey('engine', $desc_tbl_arr);
    }
    
    /**
     * @covers ierusalim\ClickHouse\ClickHouseFunctions::getSystemSettings
     */
    public function testGetSystemSettings()
    {
        $ch = $this->object;
        $arr = $ch->getSystemSettings();
        $this->assertTrue(count($arr)>10);
    }

    /**
     * @covers ierusalim\ClickHouse\ClickHouseFunctions::getVersion
     */
    public function testGetVersion()
    {
        $ch = $this->object;
        $version = $ch->getVersion();
        $this->assertTrue(strpos($version, '.')>0);
    }

    /**
     * @covers ierusalim\ClickHouse\ClickHouseFunctions::getUptime
     */
    public function testGetUptime()
    {
        $ch = $this->object;
        $uptime_sec = $ch->getUptime();
        $this->assertTrue(is_numeric($uptime_sec));
    }

    /**
     * @covers ierusalim\ClickHouse\ClickHouseFunctions::getNumbers
     */
    public function testGetNumbers()
    {
        $ch = $this->object;
        $arr = $ch->getNumbers(100);
        $this->assertEquals(100, count($arr));
    }
}
