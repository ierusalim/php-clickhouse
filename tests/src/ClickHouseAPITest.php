<?php
namespace ierusalim\ClickHouse;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-07-13 at 13:25:25.
 */
class ClickHouseAPITest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var ClickHouseAPI
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new ClickHouseAPI;
        $this->resetServerUrl();
        $ch->session_autocreate = false;
    }

    protected function resetServerUrl()
    {
        $ch = $this->object;
        
        $localenv = "localenv.php";
        if (is_file($localenv)) {
            include $localenv;
        } else {
            $clickhouse_url = null;
        }
        $ch->setServerUrl($clickhouse_url);
    }
    /**
     * @covers Ierusalim\ClickHouse\ClickHouseAPI::setServerUrl
     * @todo   Implement testSetServerUrl().
     */
    public function testSetServerUrl()
    {
        $ch = $this->object;
        $ch->setServerUrl("https://8.8.8.8:1234/");
        $this->assertEquals($ch->host, '8.8.8.8');
        $this->resetServerUrl();
    }

    /**
     * @covers Ierusalim\ClickHouse\ClickHouseAPI::anyQuery
     * @todo   Implement testAnyQuery().
     */
    public function testAnyQuery()
    {
        $ch = $this->object;
        $ans = $ch->anyQuery("SELECT 123");
        $this->assertTrue(isset($ans['response']));
        $this->assertEquals(trim($ans['response']), 123);
    }

    /**
     * @covers Ierusalim\ClickHouse\ClickHouseAPI::getQuery
     * @todo   Implement testGetQuery().
     */
    public function testGetQuery()
    {
        $ch = $this->object;
        $ans = $ch->getQuery("SELECT 456");
        $this->assertTrue(isset($ans['response']));
        $this->assertEquals(trim($ans['response']), '456');
    }

    /**
     * @covers Ierusalim\ClickHouse\ClickHouseAPI::postQuery
     * @todo   Implement testPostQuery().
     */
    public function testPostQuery()
    {
        $ch = $this->object;
        $ans = $ch->postQuery("CREATE TABLE t (a UInt8) ENGINE = Memory",[]);
        if($ans['code']==500) {
            $ans = $ch->postQuery("DROP TABLE t",[]);
        }
        $this->assertEquals($ans['code'], 200);
    }

    /**
     * @covers Ierusalim\ClickHouse\ClickHouseAPI::doQuery
     * @todo   Implement testDoQuery().
     */
    public function testDoQuery()
    {
        $ch = $this->object;
        $ans = $ch->doQuery("SELECT 22");
        $this->assertEquals(trim($ans['response']), 22);
    }

    /**
     * @covers Ierusalim\ClickHouse\ClickHouseAPI::doApiCall
     * @todo   Implement testDoApiCall().
     */
    public function testDoApiCall()
    {
        $ch = $this->object;
        $ans = $ch->doApiCall("https://ierusalim.github.io", []);
        $this->assertEquals($ans['code'], 200);
    }

    /**
     * @covers Ierusalim\ClickHouse\ClickHouseAPI::setOption
     * @todo   Implement testSetOption().
     */
    public function testSetOption()
    {
        $ch = $this->object;
        $ch->setOption('user', 'default');
        $user = $ch->getOption('user');
        $this->assertEquals($user, 'default');
    }

    /**
     * @covers Ierusalim\ClickHouse\ClickHouseAPI::getOption
     * @todo   Implement testGetOption().
     */
    public function testGetOption()
    {
        $ch = $this->object;
        $noopt = $ch->getOption('noopt');
        $this->assertNull($noopt);
    }

    /**
     * @covers Ierusalim\ClickHouse\ClickHouseAPI::setSession
     * @todo   Implement testSetSession().
     */
    public function testSetSession()
    {
         $ch = $this->object;
         $prev_sess_id = $ch->setSession();
         $this->assertNull($prev_sess_id);
         $session_id = $ch->getSession();
         $this->assertEquals(strlen($session_id), 32);
    }

    /**
     * @covers Ierusalim\ClickHouse\ClickHouseAPI::getSession
     * @todo   Implement testGetSession().
     */
    public function testGetSession()
    {
         $ch = $this->object;
         $ch->setSession();
         $session_id = $ch->getSession();
         $this->assertEquals($session_id, $ch->getOption('session_id'));
    }

    /**
     * @covers Ierusalim\ClickHouse\ClickHouseAPI::delOption
     * @todo   Implement testDelOption().
     */
    public function testDelOption()
    {
         $ch = $this->object;
         $ch->setSession();
         $session_id = $ch->getSession();
         $this->assertEquals(strlen($session_id), 32);
         $old = $ch->delOption("session_id");
         $this->assertEquals($session_id, $old);
         $new = $ch->getSession();
         $this->assertNull($new);
    }
}
